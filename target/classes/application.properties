server.port=8080

spring.datasource.url=jdbc:postgresql://localhost:5432/usermanagement
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.security.oauth2.client.registration.auth0.client-id=${AUTH0_CLIENT_ID}
spring.security.oauth2.client.registration.auth0.client-secret=${AUTH0_CLIENT_SECRET}
spring.security.oauth2.client.registration.auth0.scope=openid,profile,email
spring.security.oauth2.client.registration.auth0.redirect-uri=http://localhost:8080/login/oauth2/code/auth0
spring.security.oauth2.client.provider.auth0.issuer-uri=https://${AUTH0_DOMAIN}/
spring.security.oauth2.client.provider.auth0.user-name-attribute=email

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://${AUTH0_DOMAIN}/

logging.level.org.springframework.security=DEBUG
logging.level.com.usermanagement=DEBUG


spring.thymeleaf.cache=false